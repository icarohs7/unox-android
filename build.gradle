/*
 * MIT License
 *
 * Copyright (c) 2018 Icaro R D Temponi
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    ext.kotlin_version = '1.2.71'

    repositories {
        google()
        jcenter()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.11.0'
    }
}

apply plugin: 'com.palantir.git-version'

//External libraries versions
ext.anko_version = '0.10.5'
ext.runtimepermissionlib_version = '3.7'
ext.spinkit_version = '1.1.0'
ext.klaxon_version = '3.0.1'
ext.fuel_version = '1.15.0'

// Common settings over projects
allprojects {
    group = 'com.github.icarohs7'
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

subprojects { proj ->
    apply plugin: 'com.github.dcendents.android-maven'
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'

    android {
        compileSdkVersion 28

        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 28
            versionCode 1
            versionName gitVersion().toString().find('(\\d\\.\\d\\.\\d)')
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }

        testOptions {
            unitTests.all {
                useJUnitPlatform()
            }
        }
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])

        //Core module
        if (proj.name != 'core') {
            implementation project(':core')
        }

        //AndroidX
        implementation 'androidx.appcompat:appcompat:1.0.0'
        implementation 'androidx.core:core-ktx:1.0.0'

        //Kotlin
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        //Test
        testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.1.7'
    }

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.sourceFiles
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.compile
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}
