plugins {
    id("com.github.dcendents.android-maven") version "2.1"
    id("com.android.library")
    id("kotlin-android")
    id("kotlin-android-extensions")
    id("kotlin-kapt")
}

android {
    compileSdkVersion(28)

    defaultConfig {
        minSdkVersion(21)
        targetSdkVersion(28)
        versionCode(1)
        versionName(rootProject.version)
        testInstrumentationRunner("android.support.test.runner.AndroidJUnitRunner")
    }

    buildTypes {
        release {
            minifyEnabled(false)
            proguardFiles(getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro")
        }
    }

    dataBinding {
        enabled(true)
    }

    testOptions {
        unitTests {
            includeAndroidResources(true)
            returnDefaultValues(true)
        }
    }

    compileOptions {
        sourceCompatibility(1.8)
        targetCompatibility(1.8)
    }

}

dependencies {
    implementation(fileTree(dir: "libs", include: ["*.jar"]))
    implementation(Deps.recyclerView)
    implementation(Deps.rxJava)
    implementation(Deps.appCompat)
    implementation(Deps.fragment)
    implementation(Deps.bungee)
    implementation(Deps.spinkit)
    implementation(Deps.ankoCommons)
    implementation(Deps.ankoSdk25)
    implementation(Deps.materialDesign)
    implementation(Deps.constraintLayout)
    implementation(Deps.lifecycleExtensions)
    implementation(Deps.maskedEditText)
    implementation(Deps.glide)
    kapt(Deps.glideKapt)
    implementation(Deps.coroutines)
    implementation(Deps.arrowCore)
    implementation(Deps.androidxCore)
    implementation(Deps.kotlinReflection)
    testImplementation(Deps.kotlinAssertUtils)
    testImplementation(Deps.robolectric)
    androidTestImplementation(Deps.testRunner)
    androidTestImplementation(Deps.espresso)
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}